{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n  var state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    insets = _ref3.insets,\n    style = _ref3.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n    _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n    tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n    tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n    tabBarStyle = focusedOptions.tabBarStyle,\n    tabBarBackground = focusedOptions.tabBarBackground,\n    tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n    tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = useSafeAreaFrame();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? label + \", tab, \" + (index + 1) + \" of \" + routes.length : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) !== null && _options$tabBarIcon !== void 0 ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n          size = _ref5.size;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","Math","left","right","absoluteFill","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","params","tabBarTestID","tabBarAllowFontScaling","tabBarButton","tabBarIcon","color","size","tabBarBadge","tabBarBadgeStyle","tabBarLabelStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}