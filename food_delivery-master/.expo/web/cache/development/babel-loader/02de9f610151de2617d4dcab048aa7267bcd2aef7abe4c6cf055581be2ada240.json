{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"state\", \"descriptors\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport { GestureHandlerRootView } from \"../GestureHandler\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport CardStack from \"./CardStack\";\nvar GestureHandlerWrapper = GestureHandlerRootView !== null && GestureHandlerRootView !== void 0 ? GestureHandlerRootView : View;\nvar isArrayEqual = function isArrayEqual(a, b) {\n  return a.length === b.length && a.every(function (it, index) {\n    return it === b[index];\n  });\n};\nvar StackView = function (_React$Component) {\n  _inherits(StackView, _React$Component);\n  var _super = _createSuper(StackView);\n  function StackView() {\n    var _this;\n    _classCallCheck(this, StackView);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getPreviousRoute\", function (_ref) {\n      var route = _ref.route;\n      var _this$state = _this.state,\n        closingRouteKeys = _this$state.closingRouteKeys,\n        replacingRouteKeys = _this$state.replacingRouteKeys;\n      var routes = _this.state.routes.filter(function (r) {\n        return r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key);\n      });\n      var index = routes.findIndex(function (r) {\n        return r.key === route.key;\n      });\n      return routes[index - 1];\n    });\n    _defineProperty(_assertThisInitialized(_this), \"renderScene\", function (_ref2) {\n      var route = _ref2.route;\n      var descriptor = _this.state.descriptors[route.key] || _this.props.descriptors[route.key];\n      if (!descriptor) {\n        return null;\n      }\n      return descriptor.render();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"renderHeader\", function (props) {\n      return React.createElement(HeaderContainer, props);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenRoute\", function (_ref3) {\n      var route = _ref3.route;\n      var _this$props = _this.props,\n        state = _this$props.state,\n        navigation = _this$props.navigation;\n      var _this$state2 = _this.state,\n        closingRouteKeys = _this$state2.closingRouteKeys,\n        replacingRouteKeys = _this$state2.replacingRouteKeys;\n      if (closingRouteKeys.some(function (key) {\n        return key === route.key;\n      }) && replacingRouteKeys.every(function (key) {\n        return key !== route.key;\n      }) && state.routeNames.includes(route.name) && !state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.navigate(route);\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.replacingRouteKeys.length ? state.routes.filter(function (r) {\n              return !state.replacingRouteKeys.includes(r.key);\n            }) : state.routes,\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            replacingRouteKeys: []\n          };\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseRoute\", function (_ref4) {\n      var route = _ref4.route;\n      var _this$props2 = _this.props,\n        state = _this$props2.state,\n        navigation = _this$props2.navigation;\n      if (state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n          source: route.key,\n          target: state.key\n        }));\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.routes.filter(function (r) {\n              return r.key !== route.key;\n            }),\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            })\n          };\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionStart\", function (_ref5, closing) {\n      var route = _ref5.route;\n      return _this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionEnd\", function (_ref6, closing) {\n      var route = _ref6.route;\n      return _this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStart\", function (_ref7) {\n      var route = _ref7.route;\n      _this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureEnd\", function (_ref8) {\n      var route = _ref8.route;\n      _this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureCancel\", function (_ref9) {\n      var route = _ref9.route;\n      _this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n    return _this;\n  }\n  _createClass(StackView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        state = _this$props3.state,\n        _ = _this$props3.descriptors,\n        rest = _objectWithoutProperties(_this$props3, _excluded);\n      var _this$state3 = this.state,\n        routes = _this$state3.routes,\n        descriptors = _this$state3.descriptors,\n        openingRouteKeys = _this$state3.openingRouteKeys,\n        closingRouteKeys = _this$state3.closingRouteKeys;\n      return React.createElement(GestureHandlerWrapper, {\n        style: styles.container\n      }, React.createElement(SafeAreaProviderCompat, null, React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n        return React.createElement(ModalPresentationContext.Consumer, null, function (isParentModal) {\n          return React.createElement(HeaderShownContext.Consumer, null, function (isParentHeaderShown) {\n            return React.createElement(CardStack, _extends({\n              insets: insets,\n              isParentHeaderShown: isParentHeaderShown,\n              isParentModal: isParentModal,\n              getPreviousRoute: _this2.getPreviousRoute,\n              routes: routes,\n              openingRouteKeys: openingRouteKeys,\n              closingRouteKeys: closingRouteKeys,\n              onOpenRoute: _this2.handleOpenRoute,\n              onCloseRoute: _this2.handleCloseRoute,\n              onTransitionStart: _this2.handleTransitionStart,\n              onTransitionEnd: _this2.handleTransitionEnd,\n              renderHeader: _this2.renderHeader,\n              renderScene: _this2.renderScene,\n              state: state,\n              descriptors: descriptors,\n              onGestureStart: _this2.handleGestureStart,\n              onGestureEnd: _this2.handleGestureEnd,\n              onGestureCancel: _this2.handleGestureCancel\n            }, rest));\n          });\n        });\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(function (r) {\n        return r.key;\n      }), state.previousRoutes.map(function (r) {\n        return r.key;\n      }))) && state.routes.length) {\n        var _routes = state.routes;\n        var _previousRoutes = state.previousRoutes;\n        var _descriptors = props.descriptors;\n        var previousDescriptors = state.previousDescriptors;\n        if (props.descriptors !== state.previousDescriptors) {\n          _descriptors = state.routes.reduce(function (acc, route) {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n        if (props.state.routes !== state.previousRoutes) {\n          var map = props.state.routes.reduce(function (acc, route) {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          _routes = state.routes.map(function (route) {\n            return map[route.key] || route;\n          });\n          _previousRoutes = props.state.routes;\n        }\n        return {\n          routes: _routes,\n          previousRoutes: _previousRoutes,\n          descriptors: _descriptors,\n          previousDescriptors: previousDescriptors\n        };\n      }\n      var routes = props.state.index < props.state.routes.length - 1 ? props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n      var openingRouteKeys = state.openingRouteKeys,\n        closingRouteKeys = state.closingRouteKeys,\n        replacingRouteKeys = state.replacingRouteKeys,\n        previousRoutes = state.previousRoutes;\n      var previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      var nextFocusedRoute = routes[routes.length - 1];\n      var isAnimationEnabled = function isAnimationEnabled(key) {\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor ? descriptor.options.animationEnabled !== false : true;\n      };\n      var getAnimationTypeForReplace = function getAnimationTypeForReplace(key) {\n        var _descriptor$options$a;\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return (_descriptor$options$a = descriptor.options.animationTypeForReplace) !== null && _descriptor$options$a !== void 0 ? _descriptor$options$a : 'push';\n      };\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        if (!previousRoutes.some(function (r) {\n          return r.key === nextFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            openingRouteKeys = [].concat(_toConsumableArray(openingRouteKeys), [nextFocusedRoute.key]);\n            closingRouteKeys = closingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            if (!routes.some(function (r) {\n              return r.key === previousFocusedRoute.key;\n            })) {\n              openingRouteKeys = openingRouteKeys.filter(function (key) {\n                return key !== previousFocusedRoute.key;\n              });\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n                openingRouteKeys = openingRouteKeys.filter(function (key) {\n                  return key !== nextFocusedRoute.key;\n                });\n                routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n              } else {\n                replacingRouteKeys = [].concat(_toConsumableArray(replacingRouteKeys), [previousFocusedRoute.key]);\n                closingRouteKeys = closingRouteKeys.filter(function (key) {\n                  return key !== previousFocusedRoute.key;\n                });\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        } else if (!routes.some(function (r) {\n          return r.key === previousFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n            openingRouteKeys = openingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n          }\n        } else {}\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        var _routes2;\n        routes = routes.slice();\n        (_routes2 = routes).splice.apply(_routes2, [routes.length - 1, 0].concat(_toConsumableArray(state.routes.filter(function (_ref10) {\n          var key = _ref10.key;\n          return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n        }))));\n      }\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n      var descriptors = routes.reduce(function (acc, route) {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes: routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys: openingRouteKeys,\n        closingRouteKeys: closingRouteKeys,\n        replacingRouteKeys: replacingRouteKeys,\n        descriptors: descriptors\n      };\n    }\n  }]);\n  return StackView;\n}(React.Component);\nexport { StackView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","StyleSheet","View","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","isArrayEqual","a","b","length","every","it","index","StackView","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_defineProperty","_assertThisInitialized","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","_ref","route","_this$state","state","filter","r","key","includes","findIndex","_ref2","descriptor","props","render","createElement","_ref3","_this$props","navigation","_this$state2","some","routeNames","name","navigate","setState","_ref4","_this$props2","dispatch","_objectSpread","pop","source","target","_ref5","closing","emit","type","data","_ref6","_ref7","_ref8","_ref9","_createClass","value","_this2","_this$props3","_","rest","_objectWithoutProperties","_excluded","_this$state3","style","styles","container","Consumer","insets","isParentModal","isParentHeaderShown","_extends","getPreviousRoute","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","onTransitionStart","handleTransitionStart","onTransitionEnd","handleTransitionEnd","renderHeader","renderScene","onGestureStart","handleGestureStart","onGestureEnd","handleGestureEnd","onGestureCancel","handleGestureCancel","getDerivedStateFromProps","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","options","animationEnabled","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","concat","_toConsumableArray","splice","_routes2","_ref10","Error","Component","default","create","flex"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  EdgeInsets,\n  SafeAreaInsetsContext,\n} from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets as EdgeInsets}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        renderScene={this.renderScene}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}