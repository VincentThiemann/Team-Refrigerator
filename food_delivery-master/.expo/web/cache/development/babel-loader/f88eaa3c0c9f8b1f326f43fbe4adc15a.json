{"ast":null,"code":"import * as React from 'react';\nexport default function useKeyedChildListeners() {\n  var _React$useRef = React.useRef({\n      getState: {},\n      beforeRemove: {}\n    }),\n    keyedListeners = _React$useRef.current;\n  var addKeyedListener = React.useCallback(function (type, key, listener) {\n    keyedListeners[type][key] = listener;\n    return function () {\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners: keyedListeners,\n    addKeyedListener: addKeyedListener\n  };\n}","map":{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["React","useKeyedChildListeners","current","keyedListeners","useRef","getState","beforeRemove","addKeyedListener","useCallback","type","key","listener","undefined"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,eAAe,SAASC,sBAAT,CAAA,EAAkC;EAC/C,IAAA,aAAA,GAAoC,KAAK,CAACG,MAAN,CAKjC;MACDC,QAAQ,EAAE,CAAA,CADT;MAEDC,YAAY,EAAE,CAAA;IAFb,CALiC,CAApC;IAAiBH,cAAAA,GAAAA,aAAAA,CAATD,OAAO;EAUf,IAAMK,gBAAgB,GAAG,KAAK,CAACC,WAAN,CACvB,UACEC,IADF,EAEEC,GAFF,EAGEC,QAHF,EAIK;IACHR,cAAc,CAACM,IAAD,CAAdN,CAAqBO,GAArBP,CAAAA,GAA4BQ,QAA5BR;IAEA,OAAO,YAAM;MACXA,cAAc,CAACM,IAAD,CAAdN,CAAqBO,GAArBP,CAAAA,GAA4BS,SAA5BT;IACD,CAFD;EAGD,CAXsB,EAYvB,CAACA,cAAD,CAZuB,CAAzB;EAeA,OAAO;IACLA,cADK,EACLA,cADK;IAELI,gBAAAA,EAAAA;EAFK,CAAP;AAID","sourcesContent":["import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<{\n    [K in keyof KeyedListenerMap]: Record<\n      string,\n      KeyedListenerMap[K] | undefined\n    >;\n  }>({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}