{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport { icons, COLORS, SIZES, FONTS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Restaurant = function Restaurant(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var scrollX = new Animated.Value(0);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    restaurant = _React$useState2[0],\n    setRestaurant = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    currentLocation = _React$useState4[0],\n    setCurrentLocation = _React$useState4[1];\n  var _React$useState5 = React.useState([]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    orderItems = _React$useState6[0],\n    setOrderItems = _React$useState6[1];\n  React.useEffect(function () {\n    var _route$params = route.params,\n      item = _route$params.item,\n      currentLocation = _route$params.currentLocation;\n    setRestaurant(item);\n    setCurrentLocation(currentLocation);\n  });\n  function editOrder(action, menuId, price) {\n    var orderList = orderItems.slice();\n    var item = orderList.filter(function (a) {\n      return a.menuId == menuId;\n    });\n    if (action == \"+\") {\n      if (item.length > 0) {\n        var newQty = item[0].qty + 1;\n        item[0].qty = newQty;\n        item[0].total = item[0].qty * price;\n      } else {\n        var newItem = {\n          menuId: menuId,\n          qty: 1,\n          price: price,\n          total: price\n        };\n        orderList.push(newItem);\n      }\n      setOrderItems(orderList);\n    } else {\n      if (item.length > 0) {\n        var _item$;\n        if (((_item$ = item[0]) == null ? void 0 : _item$.qty) > 0) {\n          var _newQty = item[0].qty - 1;\n          item[0].qty = _newQty;\n          item[0].total = _newQty * price;\n        }\n      }\n      setOrderItems(orderList);\n    }\n  }\n  function getOrderQty(menuId) {\n    var orderItem = orderItems.filter(function (a) {\n      return a.menuId == menuId;\n    });\n    if (orderItem.length > 0) {\n      return orderItem[0].qty;\n    }\n    return 0;\n  }\n  function getBasketItemCount() {\n    var itemCount = orderItems.reduce(function (a, b) {\n      return a + (b.qty || 0);\n    }, 0);\n    return itemCount;\n  }\n  function sumOrder() {\n    var total = orderItems.reduce(function (a, b) {\n      return a + (b.total || 0);\n    }, 0);\n    return total.toFixed(2);\n  }\n  function renderHeader() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          width: 50,\n          paddingLeft: SIZES.padding * 2,\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Image, {\n          source: icons.back,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(View, {\n          style: {\n            height: 50,\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingHorizontal: SIZES.padding * 3,\n            borderRadius: SIZES.radius,\n            backgroundColor: COLORS.lightGray3\n          },\n          children: _jsx(Text, {\n            style: _objectSpread({}, FONTS.h3),\n            children: restaurant == null ? void 0 : restaurant.name\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          width: 50,\n          paddingRight: SIZES.padding * 2,\n          justifyContent: 'center'\n        },\n        children: _jsx(Image, {\n          source: icons.list,\n          resizeMode: \"contain\",\n          style: {\n            width: 30,\n            height: 30\n          }\n        })\n      })]\n    });\n  }\n  function renderFoodInfo() {\n    return _jsx(Animated.ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      scrollEventThrottle: 16,\n      snapToAlignment: \"center\",\n      showsHorizontalScrollIndicator: false,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }], {\n        useNativeDriver: false\n      }),\n      children: restaurant == null ? void 0 : restaurant.menu.map(function (item, index) {\n        return _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsxs(View, {\n            style: {\n              height: SIZES.height * 0.35\n            },\n            children: [_jsx(Image, {\n              source: item.photo,\n              resizeMode: \"cover\",\n              style: {\n                width: SIZES.width,\n                height: \"100%\"\n              }\n            }), _jsxs(View, {\n              style: {\n                position: 'absolute',\n                bottom: -20,\n                width: SIZES.width,\n                height: 50,\n                justifyContent: 'center',\n                flexDirection: 'row'\n              },\n              children: [_jsx(TouchableOpacity, {\n                style: {\n                  width: 50,\n                  backgroundColor: COLORS.white,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderTopLeftRadius: 25,\n                  borderBottomLeftRadius: 25\n                },\n                onPress: function onPress() {\n                  return editOrder(\"-\", item.menuId, item.price);\n                },\n                children: _jsx(Text, {\n                  style: _objectSpread({}, FONTS.body1),\n                  children: \"-\"\n                })\n              }), _jsx(View, {\n                style: {\n                  width: 50,\n                  backgroundColor: COLORS.white,\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                children: _jsx(Text, {\n                  style: _objectSpread({}, FONTS.h2),\n                  children: getOrderQty(item.menuId)\n                })\n              }), _jsx(TouchableOpacity, {\n                style: {\n                  width: 50,\n                  backgroundColor: COLORS.white,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderTopRightRadius: 25,\n                  borderBottomRightRadius: 25\n                },\n                onPress: function onPress() {\n                  return editOrder(\"+\", item.menuId, item.price);\n                },\n                children: _jsx(Text, {\n                  style: _objectSpread({}, FONTS.body1),\n                  children: \"+\"\n                })\n              })]\n            })]\n          }), _jsxs(View, {\n            style: {\n              width: SIZES.width,\n              alignItems: 'center',\n              marginTop: 15,\n              paddingHorizontal: SIZES.padding * 2\n            },\n            children: [_jsxs(Text, {\n              style: _objectSpread({\n                marginVertical: 10,\n                textAlign: 'center'\n              }, FONTS.h2),\n              children: [item.name, \" - \", item.price.toFixed(2)]\n            }), _jsx(Text, {\n              style: _objectSpread({}, FONTS.body3),\n              children: item.description\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              marginTop: 10\n            },\n            children: [_jsx(Image, {\n              source: icons.fire,\n              style: {\n                width: 20,\n                height: 20,\n                marginRight: 10\n              }\n            }), _jsxs(Text, {\n              style: _objectSpread(_objectSpread({}, FONTS.body3), {}, {\n                color: COLORS.darygray\n              }),\n              children: [item.calories.toFixed(2), \" cal\"]\n            })]\n          })]\n        }, \"menu-\" + index);\n      })\n    });\n  }\n  function renderDots() {\n    var dotPosition = Animated.divide(scrollX, SIZES.width);\n    return _jsx(View, {\n      style: {\n        height: 30\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: SIZES.padding\n        },\n        children: restaurant == null ? void 0 : restaurant.menu.map(function (item, index) {\n          var opacity = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [0.3, 1, 0.3],\n            extrapolate: \"clamp\"\n          });\n          var dotSize = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [SIZES.base * 0.8, 10, SIZES.base * 0.8],\n            extrapolate: \"clamp\"\n          });\n          var dotColor = dotPosition.interpolate({\n            inputRange: [index - 1, index, index + 1],\n            outputRange: [COLORS.darkgray, COLORS.primary, COLORS.darkgray],\n            extrapolate: \"clamp\"\n          });\n          return _jsx(Animated.View, {\n            opacity: opacity,\n            style: {\n              borderRadius: SIZES.radius,\n              marginHorizontal: 6,\n              width: dotSize,\n              height: dotSize,\n              backgroundColor: dotColor\n            }\n          }, \"dot-\" + index);\n        })\n      })\n    });\n  }\n  function renderOrder() {\n    return _jsxs(View, {\n      children: [renderDots(), _jsxs(View, {\n        style: {\n          backgroundColor: COLORS.white,\n          borderTopLeftRadius: 40,\n          borderTopRightRadius: 40\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            paddingVertical: SIZES.padding * 2,\n            paddingHorizontal: SIZES.padding * 3,\n            borderBottomColor: COLORS.lightGray2,\n            borderBottomWidth: 1\n          },\n          children: [_jsxs(Text, {\n            style: _objectSpread({}, FONTS.h3),\n            children: [getBasketItemCount(), \" items in Cart\"]\n          }), _jsxs(Text, {\n            style: _objectSpread({}, FONTS.h3),\n            children: [\"$\", sumOrder()]\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            paddingVertical: SIZES.padding * 2,\n            paddingHorizontal: SIZES.padding * 3\n          },\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(Image, {\n              source: icons.pin,\n              resizeMode: \"contain\",\n              style: {\n                width: 20,\n                height: 20,\n                tintColor: COLORS.darkgray\n              }\n            }), _jsx(Text, {\n              style: _objectSpread({\n                marginLeft: SIZES.padding\n              }, FONTS.h4),\n              children: \"Location\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(Image, {\n              source: icons.master_card,\n              resizeMode: \"contain\",\n              style: {\n                width: 20,\n                height: 20,\n                tintColor: COLORS.darkgray\n              }\n            }), _jsx(Text, {\n              style: _objectSpread({\n                marginLeft: SIZES.padding\n              }, FONTS.h4),\n              children: \"8888\"\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            padding: SIZES.padding * 2,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: _jsx(TouchableOpacity, {\n            style: {\n              width: SIZES.width * 0.9,\n              padding: SIZES.padding,\n              backgroundColor: COLORS.primary,\n              alignItems: 'center',\n              borderRadius: SIZES.radius\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"OrderDelivery\", {\n                restaurant: restaurant,\n                currentLocation: currentLocation\n              });\n            },\n            children: _jsx(Text, {\n              style: _objectSpread({\n                color: COLORS.white\n              }, FONTS.h2),\n              children: \"Order\"\n            })\n          })\n        })]\n      }), isIphoneX() && _jsx(View, {\n        style: {\n          position: 'absolute',\n          bottom: -34,\n          left: 0,\n          right: 0,\n          height: 34,\n          backgroundColor: COLORS.white\n        }\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [renderHeader(), renderFoodInfo(), renderOrder()]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2\n  }\n});\nexport default Restaurant;","map":{"version":3,"names":["React","StyleSheet","SafeAreaView","View","Text","TouchableOpacity","Image","Animated","isIphoneX","icons","COLORS","SIZES","FONTS","jsx","_jsx","jsxs","_jsxs","Restaurant","_ref","route","navigation","scrollX","Value","_React$useState","useState","_React$useState2","_slicedToArray","restaurant","setRestaurant","_React$useState3","_React$useState4","currentLocation","setCurrentLocation","_React$useState5","_React$useState6","orderItems","setOrderItems","useEffect","_route$params","params","item","editOrder","action","menuId","price","orderList","slice","filter","a","length","newQty","qty","total","newItem","push","_item$","getOrderQty","orderItem","getBasketItemCount","itemCount","reduce","b","sumOrder","toFixed","renderHeader","style","flexDirection","children","width","paddingLeft","padding","justifyContent","onPress","goBack","source","back","resizeMode","height","flex","alignItems","paddingHorizontal","borderRadius","radius","backgroundColor","lightGray3","_objectSpread","h3","name","paddingRight","list","renderFoodInfo","ScrollView","horizontal","pagingEnabled","scrollEventThrottle","snapToAlignment","showsHorizontalScrollIndicator","onScroll","event","nativeEvent","contentOffset","x","useNativeDriver","menu","map","index","photo","position","bottom","white","borderTopLeftRadius","borderBottomLeftRadius","body1","h2","borderTopRightRadius","borderBottomRightRadius","marginTop","marginVertical","textAlign","body3","description","fire","marginRight","color","darygray","calories","renderDots","dotPosition","divide","opacity","interpolate","inputRange","outputRange","extrapolate","dotSize","base","dotColor","darkgray","primary","marginHorizontal","renderOrder","paddingVertical","borderBottomColor","lightGray2","borderBottomWidth","pin","tintColor","marginLeft","h4","master_card","navigate","left","right","styles","container","create"],"sources":["D:/Projects/food_dev/food_delivery-master/screens/Restaurant.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    SafeAreaView,\r\n    View,\r\n    Text,\r\n    TouchableOpacity,\r\n    Image,\r\n    Animated\r\n} from \"react-native\";\r\nimport { isIphoneX } from 'react-native-iphone-x-helper'\r\n\r\nimport { icons, COLORS, SIZES, FONTS } from '../constants'\r\n\r\nconst Restaurant = ({ route, navigation }) => {\r\n\r\n    const scrollX = new Animated.Value(0);\r\n    const [restaurant, setRestaurant] = React.useState(null);\r\n    const [currentLocation, setCurrentLocation] = React.useState(null);\r\n    const [orderItems, setOrderItems] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let { item, currentLocation } = route.params;\r\n\r\n        setRestaurant(item)\r\n        setCurrentLocation(currentLocation)\r\n    })\r\n\r\n    function editOrder(action, menuId, price) {\r\n        let orderList = orderItems.slice()\r\n        let item = orderList.filter(a => a.menuId == menuId)\r\n\r\n        if (action == \"+\") {\r\n            if (item.length > 0) {\r\n                let newQty = item[0].qty + 1\r\n                item[0].qty = newQty\r\n                item[0].total = item[0].qty * price\r\n            } else {\r\n                const newItem = {\r\n                    menuId: menuId,\r\n                    qty: 1,\r\n                    price: price,\r\n                    total: price\r\n                }\r\n                orderList.push(newItem)\r\n            }\r\n\r\n            setOrderItems(orderList)\r\n        } else {\r\n            if (item.length > 0) {\r\n                if (item[0]?.qty > 0) {\r\n                    let newQty = item[0].qty - 1\r\n                    item[0].qty = newQty\r\n                    item[0].total = newQty * price\r\n                }\r\n            }\r\n\r\n            setOrderItems(orderList)\r\n        }\r\n    }\r\n\r\n    function getOrderQty(menuId) {\r\n        let orderItem = orderItems.filter(a => a.menuId == menuId)\r\n\r\n        if (orderItem.length > 0) {\r\n            return orderItem[0].qty\r\n        }\r\n\r\n        return 0\r\n    }\r\n\r\n    function getBasketItemCount() {\r\n        let itemCount = orderItems.reduce((a, b) => a + (b.qty || 0), 0)\r\n\r\n        return itemCount\r\n    }\r\n\r\n    function sumOrder() {\r\n        let total = orderItems.reduce((a, b) => a + (b.total || 0), 0)\r\n\r\n        return total.toFixed(2)\r\n    }\r\n\r\n    function renderHeader() {\r\n        return (\r\n            <View style={{ flexDirection: 'row' }}>\r\n                <TouchableOpacity\r\n                    style={{\r\n                        width: 50,\r\n                        paddingLeft: SIZES.padding * 2,\r\n                        justifyContent: 'center'\r\n                    }}\r\n                    onPress={() => navigation.goBack()}\r\n                >\r\n                    <Image\r\n                        source={icons.back}\r\n                        resizeMode=\"contain\"\r\n                        style={{\r\n                            width: 30,\r\n                            height: 30\r\n                        }}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                {/* Restaurant Name Section */}\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                    }}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            height: 50,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            paddingHorizontal: SIZES.padding * 3,\r\n                            borderRadius: SIZES.radius,\r\n                            backgroundColor: COLORS.lightGray3\r\n                        }}\r\n                    >\r\n                        <Text style={{ ...FONTS.h3 }}>{restaurant?.name}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                    style={{\r\n                        width: 50,\r\n                        paddingRight: SIZES.padding * 2,\r\n                        justifyContent: 'center'\r\n                    }}\r\n                >\r\n                    <Image\r\n                        source={icons.list}\r\n                        resizeMode=\"contain\"\r\n                        style={{\r\n                            width: 30,\r\n                            height: 30\r\n                        }}\r\n                    />\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function renderFoodInfo() {\r\n        return (\r\n            <Animated.ScrollView\r\n                horizontal\r\n                pagingEnabled\r\n                scrollEventThrottle={16}\r\n                snapToAlignment=\"center\"\r\n                showsHorizontalScrollIndicator={false}\r\n                onScroll={Animated.event([\r\n                    { nativeEvent: { contentOffset: { x: scrollX } } }\r\n                ], { useNativeDriver: false })}\r\n            >\r\n                {\r\n                    restaurant?.menu.map((item, index) => (\r\n                        <View\r\n                            key={`menu-${index}`}\r\n                            style={{ alignItems: 'center' }}\r\n                        >\r\n                            <View style={{ height: SIZES.height * 0.35 }}>\r\n                                {/* Food Image */}\r\n                                <Image\r\n                                    source={item.photo}\r\n                                    resizeMode=\"cover\"\r\n                                    style={{\r\n                                        width: SIZES.width,\r\n                                        height: \"100%\"\r\n                                    }}\r\n                                />\r\n\r\n                                {/* Quantity */}\r\n                                <View\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        bottom: - 20,\r\n                                        width: SIZES.width,\r\n                                        height: 50,\r\n                                        justifyContent: 'center',\r\n                                        flexDirection: 'row'\r\n                                    }}\r\n                                >\r\n                                    <TouchableOpacity\r\n                                        style={{\r\n                                            width: 50,\r\n                                            backgroundColor: COLORS.white,\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderTopLeftRadius: 25,\r\n                                            borderBottomLeftRadius: 25\r\n                                        }}\r\n                                        onPress={() => editOrder(\"-\", item.menuId, item.price)}\r\n                                    >\r\n                                        <Text style={{ ...FONTS.body1 }}>-</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <View\r\n                                        style={{\r\n                                            width: 50,\r\n                                            backgroundColor: COLORS.white,\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Text style={{ ...FONTS.h2 }}>{getOrderQty(item.menuId)}</Text>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity\r\n                                        style={{\r\n                                            width: 50,\r\n                                            backgroundColor: COLORS.white,\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            borderTopRightRadius: 25,\r\n                                            borderBottomRightRadius: 25\r\n                                        }}\r\n                                        onPress={() => editOrder(\"+\", item.menuId, item.price)}\r\n                                    >\r\n                                        <Text style={{ ...FONTS.body1 }}>+</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n\r\n                            {/* Name & Description */}\r\n                            <View\r\n                                style={{\r\n                                    width: SIZES.width,\r\n                                    alignItems: 'center',\r\n                                    marginTop: 15,\r\n                                    paddingHorizontal: SIZES.padding * 2\r\n                                }}\r\n                            >\r\n                                <Text style={{ marginVertical: 10, textAlign: 'center', ...FONTS.h2 }}>{item.name} - {item.price.toFixed(2)}</Text>\r\n                                <Text style={{ ...FONTS.body3 }}>{item.description}</Text>\r\n                            </View>\r\n\r\n                            {/* Calories */}\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: 'row',\r\n                                    marginTop: 10\r\n                                }}\r\n                            >\r\n                                <Image\r\n                                    source={icons.fire}\r\n                                    style={{\r\n                                        width: 20,\r\n                                        height: 20,\r\n                                        marginRight: 10\r\n                                    }}\r\n                                />\r\n\r\n                                <Text style={{\r\n                                    ...FONTS.body3, color: COLORS.darygray\r\n                                }}>{item.calories.toFixed(2)} cal</Text>\r\n                            </View>\r\n                        </View>\r\n                    ))\r\n                }\r\n            </Animated.ScrollView>\r\n        )\r\n    }\r\n\r\n    function renderDots() {\r\n\r\n        const dotPosition = Animated.divide(scrollX, SIZES.width)\r\n\r\n        return (\r\n            <View style={{ height: 30 }}>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: SIZES.padding\r\n                    }}\r\n                >\r\n                    {restaurant?.menu.map((item, index) => {\r\n\r\n                        const opacity = dotPosition.interpolate({\r\n                            inputRange: [index - 1, index, index + 1],\r\n                            outputRange: [0.3, 1, 0.3],\r\n                            extrapolate: \"clamp\"\r\n                        })\r\n\r\n                        const dotSize = dotPosition.interpolate({\r\n                            inputRange: [index - 1, index, index + 1],\r\n                            outputRange: [SIZES.base * 0.8, 10, SIZES.base * 0.8],\r\n                            extrapolate: \"clamp\"\r\n                        })\r\n\r\n                        const dotColor = dotPosition.interpolate({\r\n                            inputRange: [index - 1, index, index + 1],\r\n                            outputRange: [COLORS.darkgray, COLORS.primary, COLORS.darkgray],\r\n                            extrapolate: \"clamp\"\r\n                        })\r\n\r\n                        return (\r\n                            <Animated.View\r\n                                key={`dot-${index}`}\r\n                                opacity={opacity}\r\n                                style={{\r\n                                    borderRadius: SIZES.radius,\r\n                                    marginHorizontal: 6,\r\n                                    width: dotSize,\r\n                                    height: dotSize,\r\n                                    backgroundColor: dotColor\r\n                                }}\r\n                            />\r\n                        )\r\n                    })}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function renderOrder() {\r\n        return (\r\n            <View>\r\n                {\r\n                    renderDots()\r\n                }\r\n                <View\r\n                    style={{\r\n                        backgroundColor: COLORS.white,\r\n                        borderTopLeftRadius: 40,\r\n                        borderTopRightRadius: 40\r\n                    }}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            paddingVertical: SIZES.padding * 2,\r\n                            paddingHorizontal: SIZES.padding * 3,\r\n                            borderBottomColor: COLORS.lightGray2,\r\n                            borderBottomWidth: 1\r\n                        }}\r\n                    >\r\n                        <Text style={{ ...FONTS.h3 }}>{getBasketItemCount()} items in Cart</Text>\r\n                        <Text style={{ ...FONTS.h3 }}>${sumOrder()}</Text>\r\n                    </View>\r\n\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            paddingVertical: SIZES.padding * 2,\r\n                            paddingHorizontal: SIZES.padding * 3\r\n                        }}\r\n                    >\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <Image\r\n                                source={icons.pin}\r\n                                resizeMode=\"contain\"\r\n                                style={{\r\n                                    width: 20,\r\n                                    height: 20,\r\n                                    tintColor: COLORS.darkgray\r\n                                }}\r\n                            />\r\n                            <Text style={{ marginLeft: SIZES.padding, ...FONTS.h4 }}>Location</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <Image\r\n                                source={icons.master_card}\r\n                                resizeMode=\"contain\"\r\n                                style={{\r\n                                    width: 20,\r\n                                    height: 20,\r\n                                    tintColor: COLORS.darkgray\r\n                                }}\r\n                            />\r\n                            <Text style={{ marginLeft: SIZES.padding, ...FONTS.h4 }}>8888</Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                    {/* Order Button */}\r\n                    <View\r\n                        style={{\r\n                            padding: SIZES.padding * 2,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center'\r\n                        }}\r\n                    >\r\n                        <TouchableOpacity\r\n                            style={{\r\n                                width: SIZES.width * 0.9,\r\n                                padding: SIZES.padding,\r\n                                backgroundColor: COLORS.primary,\r\n                                alignItems: 'center',\r\n                                borderRadius: SIZES.radius\r\n                            }}\r\n                            onPress={() => navigation.navigate(\"OrderDelivery\", {\r\n                                restaurant: restaurant,\r\n                                currentLocation: currentLocation\r\n                            })}\r\n                        >\r\n                            <Text style={{ color: COLORS.white, ...FONTS.h2 }}>Order</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n                {isIphoneX() &&\r\n                    <View\r\n                        style={{\r\n                            position: 'absolute',\r\n                            bottom: -34,\r\n                            left: 0,\r\n                            right: 0,\r\n                            height: 34,\r\n                            backgroundColor: COLORS.white\r\n                        }}\r\n                    >\r\n                    </View>\r\n                }\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            {renderHeader()}\r\n            {renderFoodInfo()}\r\n            {renderOrder()}\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: COLORS.lightGray2\r\n    }\r\n})\r\n\r\nexport default Restaurant;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}