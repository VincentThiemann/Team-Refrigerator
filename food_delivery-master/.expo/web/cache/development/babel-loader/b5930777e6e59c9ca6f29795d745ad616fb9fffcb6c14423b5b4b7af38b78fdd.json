{"ast":null,"code":"import * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { initialWindowMetrics, SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nvar _Dimensions$get = Dimensions.get('window'),\n  _Dimensions$get$width = _Dimensions$get.width,\n  width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width,\n  _Dimensions$get$heigh = _Dimensions$get.height,\n  height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh;\nvar initialMetrics = Platform.OS === 'web' || initialWindowMetrics == null ? {\n  frame: {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n} : initialWindowMetrics;\nexport default function SafeAreaProviderCompat(_ref) {\n  var children = _ref.children,\n    style = _ref.style;\n  return React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n    if (insets) {\n      return React.createElement(View, {\n        style: [styles.container, style]\n      }, children);\n    }\n    return React.createElement(SafeAreaProvider, {\n      initialMetrics: initialMetrics,\n      style: style\n    }, children);\n  });\n}\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","Dimensions","Platform","StyleSheet","View","initialWindowMetrics","SafeAreaInsetsContext","SafeAreaProvider","_Dimensions$get","get","_Dimensions$get$width","width","_Dimensions$get$heigh","height","initialMetrics","OS","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","_ref","children","style","createElement","Consumer","styles","container","create","flex"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\@react-navigation\\elements\\lib\\module\\SafeAreaProviderCompat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AASA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,gBAHF,QAIO,gCAJP;AAWA,IAAAC,eAAA,GAAkCP,UAAU,CAACQ,GAAX,CAAe,QAAf,CAAlC;EAAAC,qBAAA,GAAAF,eAAA,CAAQG,KAAK;EAALA,KAAK,GAAAD,qBAAA,cAAG,CAAV,GAAAA,qBAAA;EAAAE,qBAAA,GAAAJ,eAAA,CAAaK,MAAM;EAANA,MAAM,GAAAD,qBAAA,cAAG,IAAAA,qBAAA;AAK5B,IAAME,cAAc,GAClBZ,QAAQ,CAACa,EAAT,KAAgB,KAAhB,IAAyBV,oBAAoB,IAAI,IAAjD,GACI;EACEW,KAAK,EAAE;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE,CAAX;IAAcP,KAAd,EAAcA,KAAd;IAAqBE,MAAA,EAAAA;EAArB,CADT;EAEEM,MAAM,EAAE;IAAEC,GAAG,EAAE,CAAP;IAAUC,IAAI,EAAE,CAAhB;IAAmBC,KAAK,EAAE,CAA1B;IAA6BC,MAAM,EAAE;EAArC;AAFV,CADJ,GAKIlB,oBANN;AAQA,eAAe,SAASmB,sBAATA,CAAAC,IAAA,EAA4D;EAAA,IAA1BC,QAAF,GAA4BD,IAAA,CAA1BC,QAAF;IAAYC,KAAA,GAAgBF,IAAA,CAAhBE,KAAA;EACzD,OACE3B,KAAA,CAAA4B,aAAA,CAACtB,qBAAD,CAAuBuB,QAAvB,QACI,UAAAV,MAAD,EAAY;IACX,IAAIA,MAAJ,EAAY;MAIV,OAAOnB,KAAA,CAAA4B,aAAA,CAACxB,IAAD;QAAMuB,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBJ,KAAnB;MAAb,GAAyCD,QAAzC,CAAP;IACD;IAED,OACE1B,KAAA,CAAA4B,aAAA,CAACrB,gBAAD;MAAkBO,cAAc,EAAEA,cAAlC;MAAkDa,KAAK,EAAEA;IAAzD,GACGD,QADH,CADF;EAKD,CAdH,CADF;AAkBD;AAEDF,sBAAsB,CAACV,cAAvB,GAAwCA,cAAxC;AAEA,IAAMgB,MAAM,GAAG3B,UAAU,CAAC6B,MAAX,CAAkB;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}