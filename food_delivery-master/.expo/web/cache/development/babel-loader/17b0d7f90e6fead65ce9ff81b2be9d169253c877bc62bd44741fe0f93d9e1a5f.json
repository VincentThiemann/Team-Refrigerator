{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport function resolve(styleProp, cleanedProps) {\n  if (styleProp) {\n    return StyleSheet ? [styleProp, cleanedProps] : styleProp[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] ? Object.assign.apply(Object, [{}].concat(_toConsumableArray(styleProp), [cleanedProps])) : _extends({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}","map":{"version":3,"names":["resolve","styleProp","cleanedProps","StyleSheet","Symbol","iterator","Object","assign","apply","concat","_toConsumableArray","_extends"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\react-native-svg\\lib\\module\\lib\\resolve.ts"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"],"mappings":";;;AAGA,OAAO,SAASA,OAATA,CAAoBC,SAApB,EAA4CC,YAA5C,EAA6D;EAClE,IAAID,SAAJ,EAAe;IACb,OAAOE,UAAU,GACb,CAACF,SAAD,EAAYC,YAAZ,CADa,GAGfD,SAAS,QAAAG,MAAA,kBAACA,MAAM,CAACC,QAAR,gBAAT,GACEC,MAAM,CAACC,MAAP,CAAAC,KAAA,CAAAF,MAAM,GAAQ,EAAd,EAAAG,MAAA,CAAAC,kBAAA,CAAqBT,SAArB,IAAgCC,YAAhC,GADF,GAEES,QAAA,CAAc,EAAd,EAAkBV,SAAlB,EAA6BC,YAA7B,CALJ;EAMD,CAPD,MAOO;IACL,OAAOA,YAAP;EACD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}