{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"isCurrentlyMounted\", false);\n    _defineProperty(_assertThisInitialized(_this), \"isClosing\", new Animated.Value(FALSE));\n    _defineProperty(_assertThisInitialized(_this), \"inverted\", new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));\n    _defineProperty(_assertThisInitialized(_this), \"layout\", {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty(_assertThisInitialized(_this), \"isSwiping\", new Animated.Value(FALSE));\n    _defineProperty(_assertThisInitialized(_this), \"interactionHandle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"pendingGestureCallback\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"lastToValue\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$contentRef$curr;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$contentRef$curr = _this.contentRef.current) === null || _this$contentRef$curr === void 0 ? void 0 : _this$contentRef$curr.setNativeProps({\n        pointerEvents: pointerEvents\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getInterpolatedStyle\", memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"getCardAnimation\", memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"contentRef\", React.createRef());\n    return _this;\n  }\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        headerDarkContent = _this$props5.headerDarkContent,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = _objectWithoutProperties(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.contentRef,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nexport { Card as default };\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_defineProperty","_assertThisInitialized","Value","props","gestureDirection","width","layout","height","_ref","closing","velocity","_this$props","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","_objectSpread","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref2","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","_ref3","enabled","_this$contentRef$curr","pointerEvents","contentRef","current","setNativeProps","interactionHandle","createInteractionHandle","clearInteractionHandle","_ref4","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","componentWillUnmount","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","_excluded","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","alpha","createElement","Provider","getIsModalPresentation","dark","collapsable","_extends","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","ref","Component","default","_ref5","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,QAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAaA,SAASC,uBAAT;AAQA,OAAOC,oBAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,OAAP;AACA,SACEC,YADF,EAEEC,iBAFF;AAKA,OAAOC,qBAAP;AACA,OAAOC,SAAP;AAqCA,IAAMC,uBAAuB,GAAG,GAAhC;AAEA,IAAMC,IAAI,GAAG,CAAb;AACA,IAAMC,KAAK,GAAG,CAAd;AAKA,IAAMC,oCAAoC,GAAG,EAA7C;AACA,IAAMC,kCAAkC,GAAG,GAA3C;AAEA,IAAMC,eAAe,GAAGjB,QAAQ,CAACkB,EAAT,KAAgB,KAAxC;AAEA,IAAMC,eAAe,GAAI,SAAnBA,eAAeA,CAAIC,KAAD,EAAgB;EACtC,IAAIA,KAAJ,EAAW;IACT,IAAMC,cAAc,GAAGpB,UAAU,CAACqB,OAAX,CAAmBF,KAAnB,CAAvB;IACA,OAAOC,cAAc,CAACE,OAAf,IAA0B,IAAjC;EACD;EAED,OAAO,KAAP;AACD,CAPD;AAAA,IASqBC,IAAN,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,IAAA;EAA0C,SAAAA,KAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,IAAA;IAAAK,KAAA,GAAAF,MAAA,CAAAI,KAAA,OAAAC,SAAA;IAAAC,eAAA,CAAAC,sBAAA,CAAAL,KAAA,yBAyD1B,KAzD0B;IAAAI,eAAA,CAAAC,sBAAA,CAAAL,KAAA,gBA2DnC,IAAI/B,QAAQ,CAACqC,KAAb,CAAmBrB,KAAnB,CA3DmC;IAAAmB,eAAA,CAAAC,sBAAA,CAAAL,KAAA,eA6DpC,IAAI/B,QAAQ,CAACqC,KAAb,CACjB7B,qBAAqB,CAACuB,KAAA,CAAKO,KAAL,CAAWC,gBAAZ,CADJ,CA7DoC;IAAAJ,eAAA,CAAAC,sBAAA,CAAAL,KAAA,aAiEtC;MACfS,KAAK,EAAE,IAAIxC,QAAQ,CAACqC,KAAb,CAAmBN,KAAA,CAAKO,KAAL,CAAWG,MAAX,CAAkBD,KAArC,CADQ;MAEfE,MAAM,EAAE,IAAI1C,QAAQ,CAACqC,KAAb,CAAmBN,KAAA,CAAKO,KAAL,CAAWG,MAAX,CAAkBC,MAArC;IAFO,CAjEsC;IAAAP,eAAA,CAAAC,sBAAA,CAAAL,KAAA,gBAsEnC,IAAI/B,QAAQ,CAACqC,KAAb,CAAmBrB,KAAnB,CAtEmC;IAAAmB,eAAA,CAAAC,sBAAA,CAAAL,KAAA;IAAAI,eAAA,CAAAC,sBAAA,CAAAL,KAAA;IAAAI,eAAA,CAAAC,sBAAA,CAAAL,KAAA;IAAAI,eAAA,CAAAC,sBAAA,CAAAL,KAAA,cA8ErC,UAAAY,IAAA,EAMZ;MAAA,IALJC,OADiB,GAMbD,IAAA,CALJC,OADiB;QAEjBC,QAAA,GAIIF,IAAA,CAJJE,QAAA;MAKA,IAAAC,WAAA,GACEf,KAAA,CAAKO,KADP;QAAQS,OAAF,GAAAD,WAAA,CAAEC,OAAF;QAAWC,cAAX,GAAAF,WAAA,CAAWE,cAAX;QAA2BC,MAA3B,GAAAH,WAAA,CAA2BG,MAA3B;QAAmCC,OAAnC,GAAAJ,WAAA,CAAmCI,OAAnC;QAA4CC,YAAA,GAAAL,WAAA,CAAAK,YAAA;MAGlD,IAAMC,OAAO,GAAGrB,KAAA,CAAKsB,iBAAL,CAAAC,aAAA,CAAAA,aAAA,KACXvB,KAAA,CAAKO,KAD6B;QAErCM,OAAA,EAAAA;MAAA,GAFF;MAKAb,KAAA,CAAKwB,WAAL,GAAmBH,OAAnB;MAEArB,KAAA,CAAKyB,SAAL,CAAeC,QAAf,CAAwBb,OAAO,GAAG7B,IAAH,GAAUC,KAAzC;MAEA,IAAM0C,IAAI,GAAGd,OAAO,GAAGI,cAAc,CAACW,KAAlB,GAA0BX,cAAc,CAACY,IAA7D;MAEA,IAAMC,SAAS,GACbH,IAAI,CAACG,SAAL,KAAmB,QAAnB,GAA8B7D,QAAQ,CAAC8D,MAAvC,GAAgD9D,QAAQ,CAAC+D,MAD3D;MAGAhC,KAAA,CAAKiC,uBAAL,CAA6B,CAACpB,OAA9B;MACAb,KAAA,CAAKkC,sBAAL;MAEAC,YAAY,CAACnC,KAAA,CAAKoC,sBAAN,CAAZ;MAEAhB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG;QAAEP,OAAF,EAAEA,OAAF;QAAWG,OAAO,EAAEF,QAAQ,KAAKuB;MAAjC,CAAH,CAAZ;MACAP,SAAS,CAACd,OAAD,EAAAO,aAAA,CAAAA,aAAA,KACJI,IAAI,CAACW,MADS;QAEjBxB,QAFiB,EAEjBA,QAFiB;QAGjBO,OAHiB,EAGjBA,OAHiB;QAIjBjC,eAJiB,EAIjBA,eAJiB;QAKjBmD,aAAa,EAAE;MAAA,GALjB,CAMGC,KANH,CAMS,UAAAC,KAAA,EAAkB;QAAA,IAAfC,QAAA,GAAeD,KAAA,CAAfC,QAAA;QACV1C,KAAA,CAAK2C,oBAAL;QAEAR,YAAY,CAACnC,KAAA,CAAKoC,sBAAN,CAAZ;QAEA,IAAIM,QAAJ,EAAc;UACZ,IAAI7B,OAAJ,EAAa;YACXM,OAAO;UACR,CAFD,MAEO;YACLD,MAAM;UACP;UAED,IAAIlB,KAAA,CAAK4C,kBAAT,EAA6B;YAE3B5C,KAAA,CAAK6C,WAAL;UACD;QACF;MACF,CAvBD;IAwBD,CApIsD;IAAAzC,eAAA,CAAAC,sBAAA,CAAAL,KAAA,wBAsI3B,UAAA8C,KAAA,EAQtB;MAAA,IAPJjC,OAD2B,GAQvBiC,KAAA,CAPJjC,OAD2B;QAE3BH,MAF2B,GAQvBoC,KAAA,CANJpC,MAF2B;QAG3BF,gBAAA,GAKIsC,KAAA,CALJtC,gBAAA;MAMA,IAAI,CAACK,OAAL,EAAc;QACZ,OAAO,CAAP;MACD;MAED,OAAOrC,uBAAuB,CAACkC,MAAD,EAASF,gBAAT,CAA9B;IACD,CApJsD;IAAAJ,eAAA,CAAAC,sBAAA,CAAAL,KAAA,8BAsJpB,UAAA+C,OAAD,EAAsB;MAAA,IAAAC,qBAAA;MACtD,IAAMC,aAAa,GAAGF,OAAO,GAAG,UAAH,GAAgB,MAA7C;MAEA,CAAAC,qBAAA,GAAAhD,KAAA,CAAKkD,UAAL,CAAgBC,OAAhB,cAAAH,qBAAA,uBAAAA,qBAAA,CAAyBI,cAAzB,CAAwC;QAAEH,aAAA,EAAAA;MAAF,CAAxC;IACD,CA1JsD;IAAA7C,eAAA,CAAAC,sBAAA,CAAAL,KAAA,6BA4JtB,YAAM;MACrC,IAAIA,KAAA,CAAKqD,iBAAL,KAA2BhB,SAA/B,EAA0C;QACxCrC,KAAA,CAAKqD,iBAAL,GAAyBnF,kBAAkB,CAACoF,uBAAnB,EAAzB;MACD;IACF,CAhKsD;IAAAlD,eAAA,CAAAC,sBAAA,CAAAL,KAAA,2BAkKxB,YAAM;MACnC,IAAIA,KAAA,CAAKqD,iBAAL,KAA2BhB,SAA/B,EAA0C;QACxCnE,kBAAkB,CAACqF,sBAAnB,CAA0CvD,KAAA,CAAKqD,iBAA/C;QACArD,KAAA,CAAKqD,iBAAL,GAAyBhB,SAAzB;MACD;IACF,CAvKsD;IAAAjC,eAAA,CAAAC,sBAAA,CAAAL,KAAA,+BAyKpB,UAAAwD,KAAA,EAEE;MAAA,IADnCC,WAAA,GACmCD,KAAA,CADnCC,WAAA;MAEA,IAAAC,YAAA,GAQI1D,KAAA,CAAKO,KART;QACEG,MADI,GAAAgD,YAAA,CACJhD,MADI;QAEJS,OAFI,GAAAuC,YAAA,CAEJvC,OAFI;QAGJwC,cAHI,GAAAD,YAAA,CAGJC,cAHI;QAIJC,iBAJI,GAAAF,YAAA,CAIJE,iBAJI;QAKJC,YALI,GAAAH,YAAA,CAKJG,YALI;QAMJrD,gBANI,GAAAkD,YAAA,CAMJlD,gBANI;QAOJsD,qBAAA,GAAAJ,YAAA,CAAAI,qBAAA;MAGF,QAAQL,WAAW,CAACM,KAApB;QACE,KAAKpF,YAAY,CAACqF,MAAlB;UACEhE,KAAA,CAAKiE,SAAL,CAAevC,QAAf,CAAwB1C,IAAxB;UACAgB,KAAA,CAAKkC,sBAAL;UACAyB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc;UACd;QACF,KAAKhF,YAAY,CAACuF,SAAlB;UAA6B;YAC3BlE,KAAA,CAAKiE,SAAL,CAAevC,QAAf,CAAwBzC,KAAxB;YACAe,KAAA,CAAK2C,oBAAL;YAEA,IAAM7B,QAAQ,GACZN,gBAAgB,KAAK,UAArB,IACAA,gBAAgB,KAAK,mBADrB,GAEIiD,WAAW,CAACU,SAFhB,GAGIV,WAAW,CAACW,SAJlB;YAMApE,KAAA,CAAKqE,OAAL,CAAa;cAAExD,OAAO,EAAEb,KAAA,CAAKO,KAAL,CAAWM,OAAtB;cAA+BC,QAAA,EAAAA;YAA/B,CAAb;YAEA8C,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB;YACjB;UACD;QACD,KAAKjF,YAAY,CAAC2F,GAAlB;UAAuB;YACrBtE,KAAA,CAAKiE,SAAL,CAAevC,QAAf,CAAwBzC,KAAxB;YAEA,IAAIsF,QAAJ;YACA,IAAIC,WAAJ;YACA,IAAI1D,SAAJ;YAEA,IACEN,gBAAgB,KAAK,UAArB,IACAA,gBAAgB,KAAK,mBAFvB,EAGE;cACA+D,QAAQ,GAAG7D,MAAM,CAACC,MAAlB;cACA6D,WAAW,GAAGf,WAAW,CAACgB,YAA1B;cACA3D,SAAQ,GAAG2C,WAAW,CAACU,SAAvB;YACD,CAPD,MAOO;cACLI,QAAQ,GAAG7D,MAAM,CAACD,KAAlB;cACA+D,WAAW,GAAGf,WAAW,CAACiB,YAA1B;cACA5D,SAAQ,GAAG2C,WAAW,CAACW,SAAvB;YACD;YAED,IAAMvD,OAAO,GACX,CAAC2D,WAAW,GAAG1D,SAAQ,GAAGgD,qBAA1B,IACErF,qBAAqB,CAAC+B,gBAAD,CADvB,GAEA+D,QAAQ,GAAG,CAFX,GAGIzD,SAAQ,KAAK,CAAb,IAAkB0D,WAAW,KAAK,CAHtC,GAIIxE,KAAA,CAAKO,KAAL,CAAWM,OALjB;YAOAb,KAAA,CAAKqE,OAAL,CAAa;cAAExD,OAAF,EAAEA,OAAF;cAAWC,QAAA,EAAAA;YAAX,CAAb;YAEA,IAAID,OAAJ,EAAa;cAGXb,KAAA,CAAKoC,sBAAL,GAA8BuC,UAAU,CAAC,YAAM;gBAC7CxD,OAAO;gBAIPnB,KAAA,CAAK6C,WAAL;cACD,CANuC,EAMrC,EANqC,CAAxC;YAOD;YAEDgB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY;YACZ;UACD;MAAA;IAEJ,CAxPsD;IAAAzD,eAAA,CAAAC,sBAAA,CAAAL,KAAA,2BA2PxBtB,OAAO,CACpC,UACEkG,iBADF,EAEE9C,SAFF;MAAA,OAGK8C,iBAAiB,CAAC9C,SAAD,CAJc;IAAA,EA3PiB;IAAA1B,eAAA,CAAAC,sBAAA,CAAAL,KAAA,uBAmQ5BtB,OAAO,CAChC,UACEmG,kBADF,EAEE1B,OAFF,EAGE2B,IAHF,EAIEpE,MAJF,EAKEqE,QALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,SARF;MAAA,OASM;QACJC,KAAK,EAAEN,kBADH;QAEJ1B,OAAO,EAAE;UAAEiC,QAAQ,EAAEjC;QAAZ,CAFL;QAGJ2B,IAAI,EAAEA,IAAI,IAAI;UAAEM,QAAQ,EAAEN;QAAZ,CAHV;QAIJjE,OAAO,EAAEb,KAAA,CAAKyB,SAJV;QAKJ4D,OAAO,EAAErF,KAAA,CAAKiE,SALV;QAMJqB,QAAQ,EAAEtF,KAAA,CAAKsF,QANX;QAOJC,OAAO,EAAE;UACPC,MAAM,EAAE9E;QADD,CAPL;QAUJ+E,MAAM,EAAE;UACNC,GAAG,EAAEX,QADC;UAENY,KAAK,EAAEX,UAFD;UAGNY,MAAM,EAAEX,WAHF;UAINY,IAAI,EAAEX;QAJA;MAVJ,CATN;IAAA,CADgC,CAnQqB;IAAA9E,eAAA,CAAAC,sBAAA,CAAAL,KAAA,iBAgVlChC,KAAK,CAAC8H,SAAN,EAhVkC;IAAA,OAAA9F,KAAA;EAAA;EAAA+F,YAAA,CAAApG,IAAA;IAAAqG,GAAA;IAAAC,KAAA,EAevD,SAAAC,kBAAA,EAAoB;MAClB,KAAK7B,OAAL,CAAa;QAAExD,OAAO,EAAE,KAAKN,KAAL,CAAWM;MAAtB,CAAb;MACA,KAAK+B,kBAAL,GAA0B,IAA1B;IACD;EAAA;IAAAoD,GAAA;IAAAC,KAAA,EAED,SAAAE,mBAAmBC,SAAD,EAAmB;MACnC,IAAAC,YAAA,GAA8C,KAAK9F,KAAnD;QAAQG,MAAF,GAAA2F,YAAA,CAAE3F,MAAF;QAAUF,gBAAV,GAAA6F,YAAA,CAAU7F,gBAAV;QAA4BK,OAAA,GAAAwF,YAAA,CAAAxF,OAAA;MAClC,IAAQJ,KAAF,GAAoBC,MAA1B,CAAQD,KAAF;QAASE,MAAA,GAAWD,MAA1B,CAAeC,MAAA;MAEf,IAAIF,KAAK,KAAK2F,SAAS,CAAC1F,MAAV,CAAiBD,KAA/B,EAAsC;QACpC,KAAKC,MAAL,CAAYD,KAAZ,CAAkBiB,QAAlB,CAA2BjB,KAA3B;MACD;MAED,IAAIE,MAAM,KAAKyF,SAAS,CAAC1F,MAAV,CAAiBC,MAAhC,EAAwC;QACtC,KAAKD,MAAL,CAAYC,MAAZ,CAAmBe,QAAnB,CAA4Bf,MAA5B;MACD;MAED,IAAIH,gBAAgB,KAAK4F,SAAS,CAAC5F,gBAAnC,EAAqD;QACnD,KAAK8E,QAAL,CAAc5D,QAAd,CAAuBjD,qBAAqB,CAAC+B,gBAAD,CAA5C;MACD;MAED,IAAMa,OAAO,GAAG,KAAKC,iBAAL,CAAuB,KAAKf,KAA5B,CAAhB;MAEA,IACE,KAAKe,iBAAL,CAAuB8E,SAAvB,MAAsC/E,OAAtC,IACA,KAAKG,WAAL,KAAqBH,OAFvB,EAGE;QAMA,KAAKgD,OAAL,CAAa;UAAExD,OAAA,EAAAA;QAAF,CAAb;MACD;IACF;EAAA;IAAAmF,GAAA;IAAAC,KAAA,EAED,SAAAK,qBAAA,EAAuB;MACrB,KAAK/F,KAAL,CAAWS,OAAX,CAAmBuF,aAAnB;MACA,KAAK3D,kBAAL,GAA0B,KAA1B;MACA,KAAKD,oBAAL;IACD;EAAA;IAAAqD,GAAA;IAAAC,KAAA,EAyOO,SAAAO,0BAAA,EAA4B;MAClC,IAAAC,YAAA,GAA8D,KAAKlG,KAAnE;QAAQG,MAAF,GAAA+F,YAAA,CAAE/F,MAAF;QAAUF,gBAAV,GAAAiG,YAAA,CAAUjG,gBAAV;QAA4BkG,uBAAA,GAAAD,YAAA,CAAAC,uBAAA;MAClC,IAAMC,8BAA8B,GAAG,IAAvC;MAEA,IAAMpC,QAAQ,GACZmC,uBAAuB,KAAKrE,SAA5B,GACIqE,uBADJ,GAEIlG,gBAAgB,KAAK,UAArB,IACAA,gBAAgB,KAAK,mBADrB,GAEArB,kCAFA,GAGAD,oCANN;MAQA,IAAIsB,gBAAgB,KAAK,UAAzB,EAAqC;QACnC,OAAO;UACLoG,SAAS,EAAE,EADN;UAELC,UAAU,EAAE,CAFP;UAGLC,OAAO,EAAE;YAAElB,MAAM,EAAE,CAAClF,MAAM,CAACC,MAAR,GAAiB4D;UAA3B,CAHJ;UAILoC,8BAAA,EAAAA;QAJK,CAAP;MAMD,CAPD,MAOO,IAAInG,gBAAgB,KAAK,mBAAzB,EAA8C;QACnD,OAAO;UACLoG,SAAS,EAAE,EADN;UAELC,UAAU,EAAE,CAAC,CAFR;UAGLC,OAAO,EAAE;YAAEpB,GAAG,EAAE,CAAChF,MAAM,CAACC,MAAR,GAAiB4D;UAAxB,CAHJ;UAILoC,8BAAA,EAAAA;QAJK,CAAP;MAMD,CAPM,MAOA;QACL,IAAMG,OAAO,GAAG,CAACpG,MAAM,CAACD,KAAR,GAAgB8D,QAAhC;QACA,IAAMwC,kBAAkB,GAAGtI,qBAAqB,CAAC+B,gBAAD,CAAhD;QAEA,IAAIuG,kBAAkB,KAAK,CAA3B,EAA8B;UAC5B,OAAO;YACLC,UAAU,EAAE,CADP;YAELC,SAAS,EAAE,EAFN;YAGLH,OAAO,EAAE;cAAEnB,KAAK,EAAEmB;YAAT,CAHJ;YAILH,8BAAA,EAAAA;UAJK,CAAP;QAMD,CAPD,MAOO;UACL,OAAO;YACLK,UAAU,EAAE,CAAC,CADR;YAELC,SAAS,EAAE,EAFN;YAGLH,OAAO,EAAE;cAAEjB,IAAI,EAAEiB;YAAR,CAHJ;YAILH,8BAAA,EAAAA;UAJK,CAAP;QAMD;MACF;IACF;EAAA;IAAAX,GAAA;IAAAC,KAAA,EAID,SAAAiB,OAAA,EAAS;MACP,IAAAC,YAAA,GAmBI,KAAK5G,KAnBT;QACEqE,iBADI,GAAAuC,YAAA,CACJvC,iBADI;QAEJC,kBAFI,GAAAsC,YAAA,CAEJtC,kBAFI;QAGJ1B,OAHI,GAAAgE,YAAA,CAGJhE,OAHI;QAIJnC,OAJI,GAAAmG,YAAA,CAIJnG,OAJI;QAKJ8D,IALI,GAAAqC,YAAA,CAKJrC,IALI;QAMJpE,MANI,GAAAyG,YAAA,CAMJzG,MANI;QAOJ+E,MAPI,GAAA0B,YAAA,CAOJ1B,MAPI;QAQJ2B,OARI,GAAAD,YAAA,CAQJC,OARI;QASJC,cATI,GAAAF,YAAA,CASJE,cATI;QAUJC,aAVI,GAAAH,YAAA,CAUJG,aAVI;QAWJC,cAXI,GAAAJ,YAAA,CAWJI,cAXI;QAYJ/G,gBAZI,GAAA2G,YAAA,CAYJ3G,gBAZI;QAaJgH,mBAbI,GAAAL,YAAA,CAaJK,mBAbI;QAcJC,iBAdI,GAAAN,YAAA,CAcJM,iBAdI;QAeJC,QAfI,GAAAP,YAAA,CAeJO,QAfI;QAgBYC,oBAhBZ,GAAAR,YAAA,CAgBJS,cAAc;QACdC,YAjBI,GAAAV,YAAA,CAiBJU,YAjBI;QAkBDC,IAAA,GAAAC,wBAAA,CAAAZ,YAAA,EAAAa,SAAA;MAGL,IAAMC,kBAAkB,GAAG,KAAKC,gBAAL,CACzBrD,kBADyB,EAEzB1B,OAFyB,EAGzB2B,IAHyB,EAIzBpE,MAJyB,EAKzB+E,MAAM,CAACC,GALkB,EAMzBD,MAAM,CAACE,KANkB,EAOzBF,MAAM,CAACG,MAPkB,EAQzBH,MAAM,CAACI,IARkB,CAA3B;MAWA,IAAMsC,iBAAiB,GAAG,KAAKC,oBAAL,CACxBxD,iBADwB,EAExBqD,kBAFwB,CAA1B;MAKA,IAAQL,cAAF,GACJO,iBADF,CAAQP,cAAF;QAAkBS,SAAlB,GACJF,iBADF,CAAwBE,SAAlB;QAA6BC,YAA7B,GACJH,iBADF,CAAmCG,YAA7B;QAA2CC,WAAA,GAC/CJ,iBADF,CAAiDI,WAAA;MAGjD,IAAMC,kBAAkB,GAAGjB,cAAc,GACrCtJ,QAAQ,CAACwK,KAAT,CACE,CACE;QACEhF,WAAW,EACTjD,gBAAgB,KAAK,UAArB,IACAA,gBAAgB,KAAK,mBADrB,GAEI;UAAEiE,YAAY,EAAEzD;QAAhB,CAFJ,GAGI;UAAE0D,YAAY,EAAE1D;QAAhB;MALR,CADF,CADF,EAUE;QAAE5B,eAAA,EAAAA;MAAF,CAVF,CADqC,GAarCiD,SAbJ;MAeA,IAAAqG,mBAAA,GAA4BtK,UAAU,CAACqB,OAAX,CAAmBoI,YAAY,IAAI,EAAnC,CAA5B;QAAQc,eAAA,GAAAD,mBAAA,CAAAC,eAAA;MACR,IAAMC,aAAa,GACjB,OAAOD,eAAP,KAA2B,QAA3B,GACI5K,KAAK,CAAC4K,eAAD,CAAL,CAAuBE,KAAvB,OAAmC,CADvC,GAEI,KAHN;MAKA,OACE7K,KAAA,CAAA8K,aAAA,CAACvK,oBAAD,CAAsBwK,QAAtB;QAA+B9C,KAAK,EAAEgC;MAAtC,GAII9J,QAAQ,CAACkB,EAAT,KAAgB,KAAhB,IACAgI,cADA,IAEAvC,IAFA,IAGAkE,sBAAsB,CAACpE,iBAAD,CAHtB,GAIE5G,KAAA,CAAA8K,aAAA,CAACjK,qBAAD;QACEoK,IAAI,EAAExB,iBADR;QAEE/G,MAAM,EAAEA,MAFV;QAGE+E,MAAM,EAAEA,MAHV;QAIElG,KAAK,EAAE8I;MAJT,EAJF,GAUI,IAdR,EAgBErK,KAAA,CAAA8K,aAAA,CAAC7K,QAAD,CAAUI,IAAV;QACEkB,KAAK,EAAE;UAKLG,OAAO,EAAEyD;QALJ,CADT;QASE+F,WAAW,EAAE;MATf,EAhBF,EA2BElL,KAAA,CAAA8K,aAAA,CAACzK,IAAD,EAAA8K,QAAA;QAAMlG,aAAa,EAAC;MAApB,GAAmC6E,IAAnC,GACGT,cAAc,GACbrJ,KAAA,CAAA8K,aAAA,CAACzK,IAAD;QAAM4E,aAAa,EAAC,UAApB;QAA+B1D,KAAK,EAAEnB,UAAU,CAACgL;MAAjD,GACGhC,OAAO,CAAC;QAAE7H,KAAK,EAAE+I;MAAT,CAAD,CADV,CADa,GAIX,IALN,EAMEtK,KAAA,CAAA8K,aAAA,CAAC7K,QAAD,CAAUI,IAAV;QACEkB,KAAK,EAAE,CAAC8J,MAAM,CAACC,SAAR,EAAmB1B,cAAnB,EAAmCD,oBAAnC,CADT;QAEE1E,aAAa,EAAC;MAFhB,GAIEjF,KAAA,CAAA8K,aAAA,CAAClK,iBAAD,EAAAuK,QAAA;QACEpG,OAAO,EAAErC,MAAM,CAACD,KAAP,KAAiB,CAAjB,IAAsB8G,cADjC;QAEEgC,cAAc,EAAEf,kBAFlB;QAGEgB,oBAAoB,EAAE,KAAKC;MAH7B,GAIM,KAAKjD,yBAAL,EAJN,GAMExI,KAAA,CAAA8K,aAAA,CAAC7K,QAAD,CAAUI,IAAV;QACEqL,8BAA8B,EAAEpK,eAAe,CAAC+I,SAAD,CADjD;QAEE9I,KAAK,EAAE,CAAC8J,MAAM,CAACC,SAAR,EAAmBjB,SAAnB;MAFT,GAIGf,aAAa,IAAIiB,WAAjB,IAAgC,CAACK,aAAjC,GACC5K,KAAA,CAAA8K,aAAA,CAAC7K,QAAD,CAAUI,IAAV;QACEkB,KAAK,EAAE,CACL8J,MAAM,CAACM,MADF,EAELnJ,gBAAgB,KAAK,YAArB,GACI,CAAC6I,MAAM,CAACO,gBAAR,EAA0BP,MAAM,CAACQ,UAAjC,CADJ,GAEIrJ,gBAAgB,KAAK,qBAArB,GACA,CAAC6I,MAAM,CAACO,gBAAR,EAA0BP,MAAM,CAACS,WAAjC,CADA,GAEAtJ,gBAAgB,KAAK,UAArB,GACA,CAAC6I,MAAM,CAACU,cAAR,EAAwBV,MAAM,CAACW,SAA/B,CADA,GAEA,CAACX,MAAM,CAACU,cAAR,EAAwBV,MAAM,CAACY,YAA/B,CARC,EASL;UAAEtB,eAAA,EAAAA;QAAF,CATK,EAULJ,WAVK,CADT;QAaEtF,aAAa,EAAC;MAbhB,EADD,GAgBG,IApBN,EAqBEjF,KAAA,CAAA8K,aAAA,CAAChK,SAAD;QACEoL,GAAG,EAAE,KAAKhH,UADZ;QAEEH,OAAO,EAAEyE,mBAFX;QAGE9G,MAAM,EAAEA,MAHV;QAIEnB,KAAK,EAAEsI;MAJT,GAMGH,QANH,CArBF,CANF,CAJF,CANF,CA3BF,CADF;IA+ED;EAAA;EAAA,OAAA/H,IAAA;AAAA,EA/d+B3B,KAAK,CAACmM,SAAzB;AAAA,SAAMxK,IAAN,IAAAyK,OAAA;gBAAMzK,I,kBACG;EACpB2H,aAAa,EAAE,KADK;EAEpBC,cAAc,EAAE,IAFI;EAGpBzD,qBAAqB,EAAE/E,uBAHH;EAIpBqI,OAAO,EAAE,SAAAA,QAAAiD,KAAA;IAAA,IACP9K,KAAA,GADO8K,KAAA,CACP9K,KAAA;IADO,OAKPA,KAAK,GACHvB,KAAA,CAAA8K,aAAA,CAAC7K,QAAD,CAAUI,IAAV;MAAe4E,aAAa,EAAC,MAA7B;MAAoC1D,KAAK,EAAE,CAAC8J,MAAM,CAACjC,OAAR,EAAiB7H,KAAjB;IAA3C,EADG,GAED,IAPG;EAAA;AAJW,C;AAiexB,OAAO,IAAMyJ,sBAAsB,GACjC,SADWA,sBAAsBA,CACjCsB,qBADoC,EAEjC;EACH,OACEA,qBAAqB,KAAKhM,uBAA1B,IAEAgM,qBAAqB,CAACC,IAAtB,KAA+B,yBAHjC;AAKD,CARM;AAUP,IAAMlB,MAAM,GAAGjL,UAAU,CAACoM,MAAX,CAAkB;EAC/BlB,SAAS,EAAE;IACTmB,IAAI,EAAE;EADG,CADoB;EAI/BrD,OAAO,EAAE;IACPqD,IAAI,EAAE,CADC;IAEP9B,eAAe,EAAE;EAFV,CAJsB;EAQ/BgB,MAAM,EAAE;IACNe,QAAQ,EAAE,UADJ;IAENC,YAAY,EAAE,CAFR;IAGNC,WAAW,EAAE,MAHP;IAINC,aAAa,EAAE;EAJT,CARuB;EAc/BjB,gBAAgB,EAAE;IAChBlE,GAAG,EAAE,CADW;IAEhBE,MAAM,EAAE,CAFQ;IAGhBnF,KAAK,EAAE,CAHS;IAIhBqK,YAAY,EAAE;MAAErK,KAAK,EAAE,CAAC,CAAV;MAAaE,MAAM,EAAE;IAArB;EAJE,CAda;EAoB/BkJ,UAAU,EAAE;IACVhE,IAAI,EAAE;EADI,CApBmB;EAuB/BiE,WAAW,EAAE;IACXnE,KAAK,EAAE;EADI,CAvBkB;EA0B/BoE,cAAc,EAAE;IACdlE,IAAI,EAAE,CADQ;IAEdF,KAAK,EAAE,CAFO;IAGdhF,MAAM,EAAE,CAHM;IAIdmK,YAAY,EAAE;MAAErK,KAAK,EAAE,CAAT;MAAYE,MAAM,EAAE,CAAC;IAArB;EAJA,CA1Be;EAgC/BqJ,SAAS,EAAE;IACTtE,GAAG,EAAE;EADI,CAhCoB;EAmC/BuE,YAAY,EAAE;IACZrE,MAAM,EAAE;EADI;AAnCiB,CAAlB,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}