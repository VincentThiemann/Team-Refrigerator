{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexport default function getActionFromState(state, options) {\n  var _state$index, _normalizedConfig$scr;\n  var normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n  var routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n  if (routes.length === 0) {\n    return undefined;\n  }\n  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === (normalizedConfig === null || normalizedConfig === void 0 ? void 0 : normalizedConfig.initialRouteName) && routes[1].key === undefined)) {\n    return {\n      type: 'RESET',\n      payload: state\n    };\n  }\n  var route = state.routes[(_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : state.routes.length - 1];\n  var current = route === null || route === void 0 ? void 0 : route.state;\n  var config = normalizedConfig === null || normalizedConfig === void 0 ? void 0 : (_normalizedConfig$scr = normalizedConfig.screens) === null || _normalizedConfig$scr === void 0 ? void 0 : _normalizedConfig$scr[route === null || route === void 0 ? void 0 : route.name];\n  var params = _objectSpread({}, route.params);\n  var payload = route ? {\n    name: route.name,\n    path: route.path,\n    params: params\n  } : undefined;\n  while (current) {\n    var _config, _config2, _config2$screens;\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n    var _routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;\n    var _route = _routes[_routes.length - 1];\n    _extends(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined\n    });\n    if (_routes.length === 1 && _routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = _route.name;\n    } else if (_routes.length === 2 && _routes[0].key === undefined && _routes[0].name === ((_config = config) === null || _config === void 0 ? void 0 : _config.initialRouteName) && _routes[1].key === undefined) {\n      params.initial = false;\n      params.screen = _route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n    if (_route.state) {\n      params.params = _objectSpread({}, _route.params);\n      params = params.params;\n    } else {\n      params.path = _route.path;\n      params.params = _route.params;\n    }\n    current = _route.state;\n    config = (_config2 = config) === null || _config2 === void 0 ? void 0 : (_config2$screens = _config2.screens) === null || _config2$screens === void 0 ? void 0 : _config2$screens[_route.name];\n  }\n  if (!payload) {\n    return;\n  }\n  return {\n    type: 'NAVIGATE',\n    payload: payload\n  };\n}\nvar createNormalizedConfigItem = function createNormalizedConfigItem(config) {\n  return typeof config === 'object' && config != null ? {\n    initialRouteName: config.initialRouteName,\n    screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined\n  } : {};\n};\nvar createNormalizedConfigs = function createNormalizedConfigs(options) {\n  return Object.entries(options).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      k = _ref2[0],\n      v = _ref2[1];\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n};","map":{"version":3,"names":["getActionFromState","state","options","_state$index","_normalizedConfig$scr","normalizedConfig","createNormalizedConfigItem","routes","index","slice","length","undefined","key","name","initialRouteName","type","payload","route","current","config","screens","params","_objectSpread","path","_config","_config2","_config2$screens","_extends","initial","screen","createNormalizedConfigs","Object","entries","reduce","acc","_ref","_ref2","_slicedToArray","k","v"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\@react-navigation\\core\\lib\\module\\getActionFromState.tsx"],"sourcesContent":["import type {\n  CommonActions,\n  NavigationState,\n  ParamListBase,\n  PartialRoute,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\n\nimport type { NavigatorScreenParams, PathConfig, PathConfigMap } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap<object>;\n};\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n    path?: string;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options\n    ? createNormalizedConfigItem(options as PathConfig<object> | string)\n    : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route\n    ? { name: route.name, path: route.path, params }\n    : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig<object> | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap<object>) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}