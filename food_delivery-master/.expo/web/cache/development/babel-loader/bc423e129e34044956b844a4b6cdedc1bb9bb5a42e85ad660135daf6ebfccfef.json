{"ast":null,"code":"var _global$contexts;\nimport * as React from 'react';\nvar contexts = '__react_navigation__elements_contexts';\nglobal[contexts] = (_global$contexts = global[contexts]) !== null && _global$contexts !== void 0 ? _global$contexts : new Map();\nexport default function getNamedContext(name, initialValue) {\n  var context = global[contexts].get(name);\n  if (context) {\n    return context;\n  }\n  context = React.createContext(initialValue);\n  context.displayName = name;\n  global[contexts].set(name, context);\n  return context;\n}","map":{"version":3,"names":["React","contexts","global","_global$contexts","Map","getNamedContext","name","initialValue","context","get","createContext","displayName","set"],"sources":["D:\\Projects\\food_dev\\food_delivery-master\\node_modules\\@react-navigation\\elements\\lib\\module\\getNamedContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst contexts = '__react_navigation__elements_contexts';\n\ndeclare global {\n  var __react_navigation__elements_contexts: Map<string, React.Context<any>>;\n}\n\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map<string, React.Context<any>>();\n\nexport default function getNamedContext<T>(\n  name: string,\n  initialValue: T\n): React.Context<T> {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext<T>(initialValue);\n  context.displayName = name;\n\n  global[contexts].set(name, context);\n\n  return context;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,QAAQ,GAAG,uCAAjB;AAOAC,MAAM,CAACD,QAAD,CAAN,IAAAE,gBAAA,GAAmBD,MAAM,CAACD,QAAD,CAAzB,cAAAE,gBAAA,cAAAA,gBAAA,GAAuC,IAAIC,GAAJ,EAAvC;AAEA,eAAe,SAASC,eAATA,CACbC,IADa,EAEbC,YAFa,EAGK;EAClB,IAAIC,OAAO,GAAGN,MAAM,CAACD,QAAD,CAAN,CAAiBQ,GAAjB,CAAqBH,IAArB,CAAd;EAEA,IAAIE,OAAJ,EAAa;IACX,OAAOA,OAAP;EACD;EAEDA,OAAO,GAAGR,KAAK,CAACU,aAAN,CAAuBH,YAAvB,CAAV;EACAC,OAAO,CAACG,WAAR,GAAsBL,IAAtB;EAEAJ,MAAM,CAACD,QAAD,CAAN,CAAiBW,GAAjB,CAAqBN,IAArB,EAA2BE,OAA3B;EAEA,OAAOA,OAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}